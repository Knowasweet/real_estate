version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - '8000'
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - estate

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_NAME}
    networks:
      - estate

  redis:
      image: redis
      networks:
          - estate

  celery_worker:
      build:
          context: .
          dockerfile: ./docker/Dockerfile
      command: /start-celeryworker
      volumes:
          - .:/app
      env_file:
          - .env
      depends_on:
          - redis
          - db
      networks:
          - estate

  flower:
      build:
          context: .
          dockerfile: ./docker/Dockerfile
      command: /start-flower
      volumes:
          - .:/app
      env_file:
          - .env
      ports:
          - '5557:5555'
      depends_on:
          - redis
          - celery_worker
          - db
      networks:
          - estate

  nginx:
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - '8080:80'
    networks:
      - estate

networks:
  estate:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: